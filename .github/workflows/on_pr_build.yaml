name: BreezeApp CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Select the type of version bump'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - custom
      custom_version:
        description: 'Enter the custom version (only if bump_type is custom)'
        required: false

jobs:
  build:
    name: Build BreezeApp APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Run script to download AAR file
        working-directory: breeze-app
        run: |
          chmod +x download_prebuilt_lib.sh
          bash download_prebuilt_lib.sh

      - name: Grant execute permission to Gradle wrapper
        working-directory: breeze-app
        run: chmod +x gradlew

      - name: Build the APK
        working-directory: breeze-app
        run: |
          gradle wrapper
          ./gradlew build -x lint

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: BreezeApp-APK
          path: breeze-app/app/build/outputs/apk

      - name: Create new tag with version bump
        if: github.event_name == 'workflow_dispatch'
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          if [ -z "$latest_tag" ]; then
            latest_tag="v0.0.0"
          fi
          echo "Latest tag: $latest_tag"

          IFS='.' read -r -a version_parts <<< "${latest_tag#v}"
          major=${version_parts[0]}
          minor=${version_parts[1]}
          patch=${version_parts[2]}

          bump_type="${{ github.event.inputs.bump_type }}"
          if [ "$bump_type" == "patch" ]; then
            patch=$((patch + 1))
          elif [ "$bump_type" == "minor" ]; then
            minor=$((minor + 1))
            patch=0
          elif [ "$bump_type" == "major" ]; then
            major=$((major + 1))
            minor=0
            patch=0
          elif [ "$bump_type" == "custom" ]; then
            custom_version="${{ github.event.inputs.custom_version }}"
            if [ -z "$custom_version" ]; then
              echo "Custom version is required when bump_type is custom"
              exit 1
            fi
            new_version="$custom_version"
          fi

          if [ "$bump_type" != "custom" ]; then
            new_version="v$major.$minor.$patch"
          fi

          echo "New version: $new_version"
          git tag "$new_version"
          git push origin "$new_version"